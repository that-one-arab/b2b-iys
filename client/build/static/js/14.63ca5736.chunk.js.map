{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","components/modals/Modal.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/toaster/Toaster.js","pages/resetpassword/ResetPasswordNew.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_arrayLikeToArray","len","arr2","Modal","props","dispatch","show","on","onClose","type","payload","color","centered","closeButton","header","body","onClick","modalOn","setModal","style","textAlign","_toConsumableArray","arrayLikeToArray","iter","Toaster","position","autohide","fade","ResetPasswordNew","modalErrorObj","modalSuccessObj","useState","password","setPassword","confirmPassword","setConfirmPassword","modal","setModalOn","toasters","addToaster","onPasswordSubmit","a","fetch","method","headers","JSON","stringify","res","status","className","map","element","md","lg","xl","placeholder","autoComplete","onChange","e","target","block"],"mappings":"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","file":"static/js/14.63ca5736.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import React from \"react\";\r\nimport { CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody, CButton } from \"@coreui/react\"\r\n\r\nfunction Modal(props) {\r\n    if (props.dispatch)\r\n        return (\r\n            <CModal \r\n            show={props.on} \r\n            onClose={() => props.dispatch({type : \"MODAL_DISPLAY\", payload: {type: \"CLOSE\"}})}\r\n            color={props.color}\r\n            centered\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle> {props.header} </CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <h5>{props.body}</h5>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => props.dispatch({type : \"MODAL_DISPLAY\", payload: {type: \"CLOSE\"}})}>Kapat</CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        )\r\n    else\r\n        return (\r\n            <CModal \r\n            show={props.modalOn}\r\n            onClose={() => props.setModal(!props.modalOn)}\r\n            color={props.color}\r\n            centered\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle> {props.header} </CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <h5 style = {{textAlign: \"center\"}}>{props.body}</h5>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => props.setModal(!props.modalOn)}>Kapat</CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        )\r\n}\r\n\r\nexport default Modal","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { CToaster, CToast, CToastBody } from \"@coreui/react\"\r\n\r\nconst Toaster = ({color, body, show}) => {\r\n    return (\r\n        <CToaster position=\"top-right\">\r\n            <CToast show={show} autohide={3000} fade={true} color={color} style = {{textAlign: \"center\"}}>\r\n                <CToastBody>{body}</CToastBody>\r\n            </CToast>\r\n        </CToaster>\r\n    )\r\n}\r\n\r\nexport default Toaster","import React, { useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react'\r\nimport Modal from '../../components/modals/Modal'\r\nimport Toaster from '../../components/toaster/Toaster'\r\n\r\nconst ResetPasswordNew = () => {\r\n  const unmatchedPassword = \"Şifreniz uyuşmuyor, lütfen şifrelerinizi kontrol edin\"\r\n  const modalErrorObj = {\r\n    header: \"HATA\",\r\n    body: \"Bilgileriniz kaydedilmedi, lütfen daha sonra tekrar deneyin\",\r\n    color: \"danger\"\r\n  }\r\n  const modalSuccessObj = {\r\n    header: \"BAŞARILI\",\r\n    body: \"Talebiniz başarıyla işlenmiştir! giriş yapabilirsiniz.\",\r\n    color: \"success\"\r\n  }\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n  const [modal, setModal] = useState({})\r\n  const [modalOn, setModalOn] = useState(false)\r\n  const [toasters, addToaster] = useState([])\r\n\r\n  const verifyPassword = () => {\r\n    if (password !== confirmPassword) {\r\n      addToaster([\r\n        ...toasters,\r\n        {body: unmatchedPassword}\r\n      ])\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const onPasswordSubmit = async () => {\r\n    if (verifyPassword()) {\r\n      const res = await fetch(\"/register\" , {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          password\r\n        })\r\n      })\r\n      setModalOn(true)\r\n      if (res.status === 200) {\r\n        setModal(modalSuccessObj)\r\n      } else {\r\n        setModalOn(modalErrorObj)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n        <CContainer>\r\n            {\r\n                toasters.map((element, i) => {\r\n                    return <Toaster key = {i} body = {element.body} show = {true} color = {\"danger\"} />\r\n                })\r\n            }\r\n            <CRow className=\"justify-content-center\">\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                <CCard className=\"mx-4\">\r\n                    <CCardBody className=\"p-4\">\r\n                    <CForm>\r\n                        <div className = \"container\">\r\n                        <div className = \"row align-items-center justify-content-between\">\r\n                            <div className = \"col\">\r\n                            <h1>Yeni şifrenizi giriniz</h1>\r\n                            <p className=\"text-muted\">Aşağıdaki alanlara şifrenizi giriniz</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupPrepend>\r\n                            <CInputGroupText>\r\n                            <i className=\"far fa-envelope\"></i>\r\n                            </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" placeholder=\"e-mail adresiniz\" autoComplete=\"email\"\r\n                            value = {password}\r\n                            onChange = {(e) => setPassword(e.target.value)}\r\n                        />\r\n                        </CInputGroup>\r\n                        <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupPrepend>\r\n                            <CInputGroupText>\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" placeholder=\"e-mail adresiniz\" autoComplete=\"email\"\r\n                            value = {confirmPassword}\r\n                            onChange = {(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n                        </CInputGroup>\r\n                        <CButton color=\"success\" block onClick = {() => onPasswordSubmit()} >Resetle</CButton>\r\n                    </CForm>\r\n                    </CCardBody>\r\n                </CCard>\r\n                </CCol>\r\n            </CRow>\r\n            <Modal header = {modal.header} body = {modal.body} color = {modal.color} modalOn = {modalOn} setModal = {setModalOn}/>\r\n        </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPasswordNew"],"sourceRoot":""}
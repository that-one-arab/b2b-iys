{"version":3,"sources":["views/hedefprogress/HedefProgress.js"],"names":["percentage","num","per","returnBarColor","HedefProgress","useState","data","setData","fetchData","a","fetch","headers","document","cookie","slice","res","status","json","useEffect","className","sm","map","goal","service","color","done","value","style","marginLeft","goal_id"],"mappings":"mKAWMA,EAAY,SAACC,EAAKC,GACtB,OAAQD,EAAI,IAAKC,GAGbC,EAAiB,SAACH,GACpB,OAAIA,EAAa,GAAW,SACnBA,EAAa,IAAMA,EAAa,GAAW,UAC3CA,EAAa,IAAMA,EAAa,IAAY,UACzC,WA0DDI,UAvDO,WAClB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAS,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,mCAAoC,CACxDC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BC,SAASC,OAAOC,MAAM,GAAjD,QAJM,UAOK,OANbC,EADQ,QAONC,OAPM,gCAQaD,EAAIE,OARjB,OAQJT,EARI,OASVD,EAAQC,GATE,2CAAH,qDAiBf,OAJAU,qBAAU,WACNV,MACD,IAGC,eAAC,IAAD,WACI,cAAC,IAAD,UACI,uDAEJ,cAAC,IAAD,UACA,cAAC,IAAD,CAAMW,UAAY,yBAAlB,SACI,cAAC,IAAD,CAAMC,GAAK,KAAX,SAEId,GAAQA,EAAKe,KAAI,SAAAC,GACb,OACI,sBAAKH,UAAU,sBAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,sBAAMA,UAAU,sBAAhB,SACKG,EAAKC,YAGd,qBAAKJ,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWA,UAAU,cAAcK,MAAOrB,EAAeH,EAAWsB,EAAKG,KAAMH,EAAKA,OAAQI,MAAO1B,EAAWsB,EAAKG,KAAMH,EAAKA,UAElI,sBAAMH,UAAU,sBAAsBQ,MAAS,CAACC,WAAY,OAA5D,SACI,8BAAIN,EAAKG,KAAT,MAAkBH,EAAKA,YAVaA,EAAKO","file":"static/js/29.32ef3167.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CProgress,\r\n    CRow,\r\n    CCol\r\n} from '@coreui/react'\r\n\r\nconst percentage =(num, per) => {\r\n  return (num/100)*per;\r\n}\r\n\r\nconst returnBarColor = (percentage) => {\r\n    if (percentage < 15) return \"danger\"\r\n    else if (percentage > 15 && percentage < 50) return \"warning\"\r\n    else if (percentage > 50 && percentage < 100) return \"primary\"\r\n    else return \"success\"\r\n}\r\n\r\nconst HedefProgress = () => {\r\n    const [data, setData] = useState([])\r\n\r\n    const fetchData = async () => {\r\n        const res = await fetch('/goal?month=current&year=current', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'authorization': `Bearer ${document.cookie.slice(8)} `\r\n            }\r\n        })\r\n        if (res.status === 200) {\r\n            const fetchData =await res.json()\r\n            setData(fetchData)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <CCard>\r\n            <CCardHeader>\r\n                <p>Bu ayki hedefleriniz</p>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CRow className = \"justify-content-center\"> \r\n                <CCol sm = \"12\">\r\n                {\r\n                    data && data.map(goal => {\r\n                        return (\r\n                            <div className=\"progress-group mb-4\" key = {goal.goal_id} >\r\n                                <div className=\"progress-group-prepend\">\r\n                                    <span className=\"progress-group-text\">\r\n                                        {goal.service}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"progress-group-bars\">\r\n                                    <CProgress className=\"progress-xs\" color={returnBarColor(percentage(goal.done, goal.goal))} value={percentage(goal.done, goal.goal)} />\r\n                                </div>\r\n                                <span className=\"progress-group-text\" style = {{marginLeft: \"5px\"}}>\r\n                                    <p>{goal.done} / {goal.goal}</p>\r\n                                </span>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                </CCol>\r\n            </CRow>\r\n\r\n            </CCardBody>\r\n        </CCard>\r\n    )\r\n}\r\n\r\nexport default HedefProgress"],"sourceRoot":""}
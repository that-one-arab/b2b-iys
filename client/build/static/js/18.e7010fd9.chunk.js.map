{"version":3,"sources":["views/hocloader/HocLoader.js","views/sdckullanicilar/index.js","views/sdckullanicilar/SdcKullanici.js"],"names":["HocLoader","props","absolute","className","isLoading","role","children","relative","mapUsersData","fetchData","map","obj","ID","user_id","Kullanıcı","name","Röl","Bakiye","balance","Number","toFixed","Kayıt_tarihi","register_date","Aktif","active","compare","a","b","fetchUserLoginDate","id","fetch","method","headers","document","cookie","slice","res","status","json","data","fetchSalesData","service","month","year","console","log","years","dateArr","i","Date","getFullYear","push","mapYears","months","mapMonths","SdcKullanici","match","params","history","useHistory","useState","userLoginDataLoading","setUserLoginDataLoading","username","userLoginData","setUserLoginData","salesdata","setSalesData","salesReportLoading","setSalesReportLoading","useSelector","state","reducer","sdc","actions","selectedMonth","selectedYear","dispatch","useDispatch","useEffect","userDataFetch","mappedUserData","fetchAllData","allData","undefined","xs","sm","block","color","onClick","row","lg","xl","placeholder","readOnly","style","marginBottom","onChange","e","type","payload","target","value","approvedCount","rejectedCount","sentCount","processingCount","col","service_id","textAlign"],"mappings":"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","file":"static/js/18.e7010fd9.chunk.js","sourcesContent":["import \"./loader.css\"\r\n\r\nconst HocLoader = (props) => {\r\n    if (props.absolute)\r\n      return (\r\n        <div >\r\n          <div className={ props.isLoading ? \"loader loader-absolute\" : \"\"}>\r\n            <div className={ props.isLoading ? \"spinner-border\" : \"\"} role=\"status\">\r\n              {/* <span className=\"sr-only loader-icon\">Loading...</span> */}\r\n            </div>\r\n          </div>\r\n          {\r\n            props.children\r\n          }\r\n        </div>\r\n      )\r\n    else if (props.relative)\r\n      return (\r\n        <div className = \"relativePosition\">\r\n          <div className={ props.isLoading ? \"loader loader-relative\" : \"\"}>\r\n            <div className={ props.isLoading ? \"spinner-border\" : \"\"} role=\"status\">\r\n              {/* <span className=\"sr-only loader-icon\">Loading...</span> */}\r\n            </div>\r\n          </div>\r\n          {\r\n            props.children\r\n          }\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default HocLoader;","\r\n\r\n\r\n// ******** Was used to map diğer işlem's data, for now it's deprecated ******** //\r\n// export const filterAndMapAppData = (allData) => {\r\n//     let digerIslemApproved = 0\r\n//     let digerIslemSent = 0\r\n//     let digerIslemProcessing = 0\r\n//     let digerIslemRejected = 0\r\n//     // eslint-disable-next-line\r\n//     const allDataFiltered = allData.filter(obj => {\r\n//       switch (obj.service) {\r\n//         case \"İptal\":\r\n//           digerIslemApproved = digerIslemApproved + Number(obj.approvedCount)\r\n//           digerIslemSent = digerIslemSent + Number(obj.sentCount)\r\n//           digerIslemProcessing = digerIslemProcessing + Number(obj.processingCount)\r\n//           digerIslemRejected = digerIslemRejected + Number(obj.rejectedCount)\r\n//           break;\r\n//         case \"Devir\":\r\n//           digerIslemApproved = digerIslemApproved + Number(obj.approvedCount)\r\n//           digerIslemSent = digerIslemSent + Number(obj.sentCount)\r\n//           digerIslemProcessing = digerIslemProcessing + Number(obj.processingCount)\r\n//           digerIslemRejected = digerIslemRejected + Number(obj.rejectedCount)\r\n//           break;\r\n//         case \"Nakil\":\r\n//           digerIslemApproved = digerIslemApproved + Number(obj.approvedCount)\r\n//           digerIslemSent = digerIslemSent + Number(obj.sentCount)\r\n//           digerIslemProcessing = digerIslemProcessing + Number(obj.processingCount)\r\n//           digerIslemRejected = digerIslemRejected + Number(obj.rejectedCount)\r\n//           break;\r\n//         default:\r\n//           return obj\r\n//       }\r\n//     })\r\n//     allDataFiltered.push({\r\n//       service: \"Diğer\", \r\n//       routeName: \"diger\", \r\n//       approvedCount: digerIslemApproved, \r\n//       sentCount: digerIslemSent,\r\n//       processingCount: digerIslemProcessing,\r\n//       rejectedCount: digerIslemRejected\r\n//     })\r\n//     const allDataMapped = allDataFiltered.map(obj => {\r\n//       switch (obj.service) {\r\n//         case \"Faturasız\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"faturasiz\"\r\n//           }\r\n//         case \"Faturalı\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"faturali\"\r\n//           }\r\n//         case \"DSL\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"DSL\"\r\n//           }\r\n//         case \"PSTN\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"pstn\"\r\n//           }\r\n//         case \"Taahüt\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"taahut\"\r\n//           }\r\n//         case \"Tivibu\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"tivibu\"\r\n//           }\r\n//         default:\r\n//           return obj\r\n//       }\r\n//     })\r\n//     return allDataMapped\r\n// }\r\n\r\nexport const mapUsersData = (fetchData) => {\r\n  return fetchData.map(obj => {\r\n    let role = \"\"\r\n    switch (obj.role) {\r\n      case \"admin\":\r\n        role = \"Admin\"\r\n        break;\r\n      case \"dealer\":\r\n        role = \"Bayi\"\r\n        break\r\n      case \"sales_assistant\":\r\n        role = \"Satış Destek\"\r\n        break\r\n      case \"sales_assistant_chef\":\r\n        role = \"Satış Destek Şefi\"\r\n        break\r\n      default:\r\n        break;\r\n    }\r\n    return {\r\n        ID: obj.user_id,\r\n        Kullanıcı: obj.name,\r\n        Röl: role,\r\n        Bakiye: obj.balance ? Number(obj.balance).toFixed(2) : \"Yok\",\r\n        Kayıt_tarihi: obj.register_date,\r\n        Aktif: obj.active\r\n      }\r\n  })\r\n}\r\n\r\nexport const compare = ( a, b ) => {\r\n  if ( a.ID < b.ID ){\r\n    return -1;\r\n  }\r\n  if ( a.ID > b.ID ){\r\n    return 1;\r\n  }\r\n  return 0;\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { CCard, CCardBody, CCardHeader, CCol, CRow, CFormGroup, CLabel, CInput, CButton, CSelect } from '@coreui/react'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport HocLoader from '../hocloader/HocLoader'\r\nimport \"./style.css\"\r\nimport { mapUsersData } from '.'\r\n\r\nconst fetchUserLoginDate = async (id) => {\r\n  const res = await fetch(`/user/${id}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n    }\r\n  })\r\n  if (res.status === 200) {\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n}\r\n\r\nconst fetchSalesData = async (id, service, status, month, year) => {\r\n  try {\r\n    const res = await fetch(`/applications/count/?service=${service}&status=${status}&userID=${id}&month=${month}&year=${year}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n      }\r\n    })\r\n    if (res.status === 200) {\r\n      const data = await res.json()\r\n      return data\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst mapYears = () => {\r\n  let dateArr = []\r\n  for (let i = new Date().getFullYear(); i >= 2000; i--) {\r\n    dateArr.push(i)\r\n  }\r\n  return dateArr\r\n}\r\n\r\nconst mapMonths = () => {\r\n  const firstMonth = 1\r\n  let dateArr = [\"HEPSI\"]\r\n  for (let i = 12; i >= firstMonth; i--) {\r\n    dateArr.push(i)\r\n  }\r\n  return dateArr\r\n}\r\n\r\nconst years = mapYears()\r\nconst months = mapMonths()\r\n\r\nconst SdcKullanici = ({match}) => {\r\n  const { id } = match.params\r\n  const history = useHistory()\r\n  const [userLoginDataLoading, setUserLoginDataLoading] = useState(true)\r\n  const [userLoginData, setUserLoginData] = useState({id: 0, username:\"\", role:\"\"})\r\n  const [salesdata, setSalesData] = useState([])\r\n  const [salesReportLoading, setSalesReportLoading] = useState(false)\r\n\r\n  const month = useSelector(state => state.reducer.sdc.actions.selectedMonth)\r\n  const year = useSelector(state => state.reducer.sdc.actions.selectedYear)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const fetchAllData = async () => {\r\n      try {\r\n        const userDataFetch = await fetchUserLoginDate(id)\r\n        const mappedUserData = mapUsersData(userDataFetch)\r\n        setUserLoginData(mappedUserData[0])\r\n        setUserLoginDataLoading(false)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    fetchAllData()\r\n  }, [id])\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const allData = await fetchSalesData(id, \"MAP\", \"ALL\", month, year)\r\n      console.log('allData ', allData)\r\n      setSalesData(allData)\r\n      setSalesReportLoading(false)\r\n    }\r\n    setSalesReportLoading(true)\r\n    fetchData()\r\n  }, [id, month, year])\r\n  if (userLoginData !== undefined)\r\n  return (\r\n      <CRow className = \"justify-content-center align-items-center\">\r\n        <CCol xs=\"12\" sm=\"8\">\r\n      <HocLoader isLoading = {salesReportLoading} absolute >\r\n            <CCard>\r\n              <CCardHeader>\r\n                <CRow>\r\n                  <CCol>\r\n                    <h5>Kullanıcı Detay</h5>\r\n                  </CCol>\r\n                  <CCol sm = \"2\">\r\n                    <CButton active block color=\"secondary\" aria-pressed=\"true\" id = \"sdcKullanici-backButton\" onClick = {() => {\r\n                      history.push(\"/sdc/kullanicilar\")\r\n                    }}>Geri</CButton>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardHeader>\r\n              <CCardBody className = \"basvuru-detay\" >\r\n                <HocLoader isLoading = {userLoginDataLoading} absolute = {true}>\r\n                  <CFormGroup row className=\"my-0\">\r\n                    <CCol lg=\"12\" xl = \"3\" >\r\n                      <CFormGroup>\r\n                        <CLabel>ID</CLabel>\r\n                        <CInput placeholder= {userLoginData.ID} readOnly />\r\n                      </CFormGroup>\r\n                    </CCol>\r\n                    <CCol lg=\"12\" xl = \"3\">\r\n                      <CFormGroup>\r\n                        <CLabel>İsim</CLabel>\r\n                        <CInput placeholder={userLoginData.Kullanıcı} readOnly />\r\n                      </CFormGroup>\r\n                    </CCol>\r\n                    <CCol lg=\"12\" xl = \"3\">\r\n                      <CFormGroup>\r\n                        <CLabel>Röl</CLabel>\r\n                        <CInput placeholder={userLoginData.Röl} readOnly />\r\n                      </CFormGroup>\r\n                    </CCol>\r\n                    <CCol lg=\"12\" xl = \"3\">\r\n                      <CFormGroup>\r\n                        <CLabel>Kayıt tarihi</CLabel>\r\n                        <CInput placeholder={userLoginData.Kayıt_tarihi} readOnly />\r\n                      </CFormGroup>\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                </HocLoader>\r\n                <div className = \"sdcKullainici-divider\" style = {{marginBottom: \"20px\"}}></div>\r\n                <CFormGroup className=\"my-0 p-2 justify-content-center align-items-center\" row >\r\n                  <CCol lg = \"6\">\r\n                    <h5>İşlem Raporu</h5>\r\n                  </CCol>\r\n                  <CCol>\r\n                    <h5> Tarih aralığı seçiniz</h5>\r\n                  </CCol>\r\n                  <CCol>\r\n                    <CRow>\r\n                      <CCol>\r\n                        <CLabel>Ay</CLabel>\r\n                        <CSelect onChange = {(e) => dispatch({type: \"SDC_ACTION_SET_MONTH\", payload: e.target.value})} >\r\n                          {\r\n                            months && months.map(month => (\r\n                              <option value = {month === \"HEPSI\" ? 0 : month} key = {month}> {month} </option>\r\n                            ))\r\n                          }\r\n                        </CSelect>\r\n                      </CCol>\r\n                      <CCol>\r\n                        <CLabel>Sene</CLabel>\r\n                        <CSelect onChange = {(e) => dispatch({type: \"SDC_ACTION_SET_YEAR\", payload: e.target.value})} >\r\n                          {\r\n                            years && years.map(year => (\r\n                              <option value = {year} key = {year}> {year} </option>\r\n                            ))\r\n                          }\r\n                        </CSelect>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <div className = \"sdcKullainici-divider\"></div>\r\n                {\r\n                  salesdata.map((obj, i) => {\r\n                    return (\r\n                      <div key = {i+10}>\r\n                      <CFormGroup row>\r\n                        <CCol>\r\n                          <CLabel><strong>{obj.service}</strong></CLabel>\r\n                        </CCol>\r\n                      </CFormGroup>\r\n                      <CFormGroup row className=\"justify-content-center\">\r\n                        <CCol sm = \"6\" lg=\"2\">\r\n                          <CFormGroup>\r\n                            <CLabel> Toplam</CLabel>\r\n                            <CInput placeholder= {Number(obj.approvedCount) + Number(obj.rejectedCount) + Number(obj.sentCount) + Number(obj.processingCount)} readOnly />\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol sm = \"6\" lg=\"2\">\r\n                          <CFormGroup>\r\n                            <CLabel>Onaylanan</CLabel>\r\n                            <CInput placeholder={obj.approvedCount} readOnly />\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol sm = \"6\" lg=\"2\">\r\n                          <CFormGroup>\r\n                            <CLabel>Gönderilen</CLabel>\r\n                            <CInput placeholder={obj.sentCount} readOnly />\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol sm = \"6\" lg=\"2\">\r\n                          <CFormGroup>\r\n                            <CLabel>İşlenen</CLabel>\r\n                            <CInput placeholder={obj.processingCount} readOnly />\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol sm = \"6\" lg=\"2\">\r\n                          <CFormGroup>\r\n                            <CLabel>İptal edilen</CLabel>\r\n                            <CInput placeholder={obj.rejectedCount} readOnly />\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <CCol sm = \"6\" lg=\"2\" >\r\n                          <CFormGroup>\r\n                            <CLabel col></CLabel>\r\n                            <CButton onClick = {() => history.push(`/sdc/islemler?service=${obj.service_id}&id=${userLoginData.ID}&month=${month}&year=${year}`)} color = \"success\" ><i className=\"fas fa-arrow-right\"></i></CButton>\r\n                          </CFormGroup>\r\n                        </CCol>\r\n                        <div className = \"sdcKullainici-divider\"></div>\r\n\r\n                      </CFormGroup>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </CCardBody>\r\n            </CCard>\r\n        </HocLoader>\r\n        </CCol>\r\n      </CRow>\r\n  )\r\n    else\r\n    return(\r\n    <CRow className = \"justify-content-center align-items-center\">\r\n      <CCol xs=\"12\" sm=\"8\">\r\n        <CCard>\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol>\r\n                <h4>HATA</h4>\r\n              </CCol>\r\n              <CCol sm = \"2\" className = \"basvuru-detay-header-buttonCol\">\r\n                <CButton active block color=\"secondary\" aria-pressed=\"true\" onClick = {() => {\r\n                  history.push(\"/sdc/kullanicilar\")\r\n                }}>Geri</CButton>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody style = {{textAlign: \"center\"}} >\r\n            <h1>Böyle bir kullanıcı yok</h1>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n  </CRow>\r\n  )\r\n}\r\n\r\nexport default SdcKullanici"],"sourceRoot":""}
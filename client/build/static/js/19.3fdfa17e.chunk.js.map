{"version":3,"sources":["views/hocloader/HocLoader.js","components/modals/Modal.js","components/index.js","views/hesap/Hesap.js"],"names":["HocLoader","props","absolute","className","isLoading","role","children","relative","Modal","dispatch","show","on","onClose","type","payload","color","centered","closeButton","header","body","onClick","modalOn","setModal","style","textAlign","mapDataToTurkish","fetchData","map","obj","submitDate","Date","submit_time","statusChangeDate","status_change_date","lastChangeDate","last_change_date","submitProcessNum","status","ID","id","İsim","client_name","Tarih","toISOString","slice","Hizmet","service_name","Kampanya","offer_name","Açıklama","description","Statü","salesRepDetails","sales_rep_details","finalSalesRepDetails","final_sales_rep_details","imageURLS","image_urls","getBadge","mapRoleToTurkish","patchPassword","password","a","fetch","method","headers","document","cookie","JSON","stringify","patchName","name","parseDateToString","date","d","getFullYear","getMonth","getDate","modalSuccessObj","modalErrorObj","Hesap","useDispatch","useState","balance","registerDate","email","userDetails","setUserDetails","userName","setUserName","userPassword","setUserPassword","userConfirmPassword","setUserConfirmPassword","submitButtonDisabled","setSubmitButtonDisabled","loading","setLoading","setModalOn","modalFields","setModalFields","res","json","data","onSubmit","username","oldUsername","confirmPassword","determineChange","resPassword","resName","useEffect","xs","md","row","defaultValue","onChange","e","target","value","htmlFor","readOnly","register_date","marginTop","marginBottom","placeholder","size","disabled"],"mappings":"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","file":"static/js/19.3fdfa17e.chunk.js","sourcesContent":["import \"./loader.css\"\r\n\r\nconst HocLoader = (props) => {\r\n    if (props.absolute)\r\n      return (\r\n        <div >\r\n          <div className={ props.isLoading ? \"loader loader-absolute\" : \"\"}>\r\n            <div className={ props.isLoading ? \"spinner-border\" : \"\"} role=\"status\">\r\n              {/* <span className=\"sr-only loader-icon\">Loading...</span> */}\r\n            </div>\r\n          </div>\r\n          {\r\n            props.children\r\n          }\r\n        </div>\r\n      )\r\n    else if (props.relative)\r\n      return (\r\n        <div className = \"relativePosition\">\r\n          <div className={ props.isLoading ? \"loader loader-relative\" : \"\"}>\r\n            <div className={ props.isLoading ? \"spinner-border\" : \"\"} role=\"status\">\r\n              {/* <span className=\"sr-only loader-icon\">Loading...</span> */}\r\n            </div>\r\n          </div>\r\n          {\r\n            props.children\r\n          }\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default HocLoader;","import React from \"react\";\r\nimport { CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody, CButton } from \"@coreui/react\"\r\n\r\nfunction Modal(props) {\r\n    if (props.dispatch)\r\n        return (\r\n            <CModal \r\n            show={props.on} \r\n            onClose={() => props.dispatch({type : \"MODAL_DISPLAY\", payload: {type: \"CLOSE\"}})}\r\n            color={props.color}\r\n            centered\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle> {props.header} </CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <h5>{props.body}</h5>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => props.dispatch({type : \"MODAL_DISPLAY\", payload: {type: \"CLOSE\"}})}>Kapat</CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        )\r\n    else\r\n        return (\r\n            <CModal \r\n            show={props.modalOn}\r\n            onClose={() => props.setModal(!props.modalOn)}\r\n            color={props.color}\r\n            centered\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle> {props.header} </CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <h5 style = {{textAlign: \"center\"}}>{props.body}</h5>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => props.setModal(!props.modalOn)}>Kapat</CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        )\r\n}\r\n\r\nexport default Modal","export const mapDataToTurkish = (fetchData) => {\r\n    return fetchData.map(obj => {\r\n        let submitDate = new Date(obj.submit_time)\r\n        let statusChangeDate = new Date(obj.status_change_date)\r\n        let lastChangeDate = new Date(obj.last_change_date)\r\n        let submitProcessNum = 0\r\n        let status = \"\"\r\n        if (obj.status === \"approved\") {\r\n          submitProcessNum = 3\r\n          status = \"Onaylandı\"\r\n        }\r\n        else if (obj.status === \"rejected\") {\r\n          submitProcessNum = 3\r\n          status = \"İptal\"\r\n        }\r\n        else if (obj.status === \"processing\") {\r\n          submitProcessNum = 2\r\n          status = \"İşleniyor\"\r\n        }\r\n        else if (obj.status === \"sent\") {\r\n          status = \"Gönderildi\"\r\n          submitProcessNum = 1\r\n        }\r\n        return {\r\n            ID: obj.id,\r\n            İsim: obj.client_name,\r\n            Tarih: submitDate.toISOString().slice(0, 10),\r\n            Hizmet: obj.service_name,\r\n            Kampanya: obj.offer_name,\r\n            Açıklama: obj.description,\r\n            Statü: status,\r\n            salesRepDetails: obj.sales_rep_details ? obj.sales_rep_details : \"\",\r\n            statusChangeDate: statusChangeDate ? statusChangeDate.toISOString().slice(0, 10) : null,\r\n            finalSalesRepDetails: obj.final_sales_rep_details ? obj.final_sales_rep_details : \"\",\r\n            lastChangeDate: lastChangeDate ? lastChangeDate.toISOString().slice(0, 10) : null,\r\n            submitProcessNum,\r\n            imageURLS: obj.image_urls ? obj.image_urls : null\r\n          }\r\n      })\r\n}\r\n\r\nexport const getBadge = (status)=>{\r\n    switch (status) {\r\n       case 'Onaylandı': return 'success'\r\n       case 'İşleniyor': return 'warning'\r\n       case 'İptal': return 'danger'\r\n       case 'Gönderildi': return 'secondary'\r\n       default: return 'primary'\r\n    }\r\n  }\r\n\r\nexport const mapRoleToTurkish = (status)=>{\r\n  switch (status) {\r\n      case 'dealer': return 'Bayi'\r\n      case 'sales_assistant': return 'Satış Destek'\r\n      case 'sales_assistant_chef': return 'Satış Destek Şefi'\r\n      case 'admin': return 'Admin'\r\n      default: return ''\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CRow,\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport Modal from '../../components/modals/Modal';\r\nimport { mapRoleToTurkish } from \"../../components\"\r\nimport HocLoader from \"../hocloader/HocLoader\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nconst patchPassword = async (password) => {\r\n    const res = await fetch('/user/password', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'authorization': `Bearer ${document.cookie.slice(8)} `\r\n        },\r\n        body: JSON.stringify({password})\r\n      })\r\n    if (res.status === 200)\r\n      return true\r\n    else\r\n      return false\r\n}\r\n\r\nconst patchName = async (name) => {\r\n    const res = await fetch('/user/name', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'authorization': `Bearer ${document.cookie.slice(8)} `\r\n        },\r\n        body: JSON.stringify({name})\r\n      })\r\n    if (res.status === 200)\r\n      return true\r\n    else\r\n      return false\r\n}\r\n\r\nconst determineUserFieldChange = (username, oldUsername, password, confirmPassword) => {\r\n    if (username !== oldUsername && password !== \"\" && password === confirmPassword)\r\n        return \"BOTH\"\r\n    else if (username !== oldUsername)\r\n        return \"USERNAME\"\r\n    else if (password === confirmPassword)\r\n        return \"PASSWORD\"\r\n}\r\n\r\nconst parseDateToString = (date) => {\r\n    const d = new Date(date)\r\n    return `${d.getFullYear()}-${d.getMonth()+1}-${d.getDate()}`\r\n}\r\n\r\nconst modalSuccessObj = {\r\n    color: \"success\",\r\n    header: \"Başarılı\",\r\n    body: \"Bilgileriniz başarıyla değiştirilmiştir\"\r\n}\r\n\r\nconst modalErrorObj = {\r\n    color: \"danger\",\r\n    header: \"Hata\",\r\n    body: \"Bir sorun oldu, lütfen daha sonra tekrar deneyin\"\r\n}\r\n\r\nconst Hesap = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [userDetails, setUserDetails] = useState({name: \"\", role: \"\", balance: \"\", registerDate: \"\", email: \"\"})\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [userPassword, setUserPassword] = useState(\"password\")\r\n    const [userConfirmPassword, setUserConfirmPassword] = useState(\"confirmpassword\")\r\n    const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true)\r\n    const [loading, setLoading] = useState(false)\r\n    const [modalOn, setModalOn] = useState(false)\r\n    const [modalFields, setModalFields] = useState({})\r\n\r\n    const fetchData = async () => {\r\n        const res = await fetch('/user', {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'authorization': `Bearer ${document.cookie.slice(8)} `\r\n              }\r\n            })\r\n        const data = await res.json()\r\n        setUserDetails(data[0])\r\n        setUserName(data[0].name)\r\n        dispatch({type: \"FILL_USER_INFO\", payload: data[0]})\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        const determineChange = determineUserFieldChange(userName, userDetails.name, userPassword, userConfirmPassword)\r\n        let res, resName, resPassword\r\n        setLoading(true)\r\n        switch (determineChange) {\r\n            case \"PASSWORD\":\r\n                res = await patchPassword(userPassword)\r\n                if (res) {\r\n                    setModalOn(true)\r\n                    setModalFields(modalSuccessObj)\r\n                } else {\r\n                    setModalOn(true)\r\n                    setModalFields(modalErrorObj)\r\n                }\r\n                break\r\n            case \"USERNAME\":\r\n                res = await patchName(userName)\r\n                if (res) {\r\n                    setModalOn(true)\r\n                    setModalFields(modalSuccessObj)\r\n                } else {\r\n                    setModalOn(true)\r\n                    setModalFields(modalErrorObj)\r\n                }\r\n                break\r\n            case \"BOTH\":\r\n                resPassword = await patchPassword(userPassword)\r\n                resName = await patchName(userName)\r\n                if (resPassword && resName) {\r\n                    setModalOn(true)\r\n                    setModalFields(modalSuccessObj)\r\n                } else {\r\n                    setModalOn(true)\r\n                    setModalFields(modalErrorObj)\r\n                }\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n        await fetchData()\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    // eslint-disable-next-line\r\n    }, [])\r\n\r\n    // decides footer submit button disabled or enabled state\r\n    useEffect(() => {\r\n    if (userPassword === \"\" || userConfirmPassword === \"\") {\r\n        if (userName !== userDetails.name)\r\n            setSubmitButtonDisabled(false)\r\n        else\r\n            setSubmitButtonDisabled(true)\r\n    }\r\n    else if (userPassword === userConfirmPassword) {\r\n        setSubmitButtonDisabled(false)\r\n    }\r\n    else if (userName !== userDetails.name) {\r\n        setSubmitButtonDisabled(false)\r\n    }\r\n    else {\r\n        setSubmitButtonDisabled(true)\r\n    }\r\n    }, [userName, userPassword, userConfirmPassword, userDetails])\r\n\r\n    return (\r\n        <CRow className = \"d-flex justify-content-center\">\r\n            <Modal modalOn = {modalOn} setModal = {setModalOn} header = {modalFields.header} body = {modalFields.body} color = {modalFields.color} />\r\n            <CCol xs=\"12\" md=\"8\">\r\n            <HocLoader relative = {true} isLoading = {loading} >\r\n            <CCard>\r\n                <CCardHeader className = \"basvuruFormHeader\">\r\n                Hesap bilgileriniz\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                <CForm className=\"form-horizontal\">\r\n                    <CFormGroup row>\r\n                        <CCol md=\"3\">\r\n                            <CLabel >İsminiz</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                            <CInput defaultValue = {userDetails.name} onChange = {(e) => setUserName(e.target.value)}/>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n\r\n                    <CFormGroup row>\r\n                        <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"disabled-input\">Mail hesabınız</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                            <CInput value = {userDetails.email} readOnly/>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n\r\n                    <CFormGroup row>\r\n                        <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"disabled-input\">Rölünüz</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                            <CInput value = {mapRoleToTurkish(userDetails.role)} readOnly/>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n\r\n                    <CFormGroup row>\r\n                        <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"disabled-input\">Kayıt tarihi</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                            <CInput value = {parseDateToString(userDetails.register_date)} readOnly/>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n\r\n                    <h5 style = {{marginTop: \"50px\", marginBottom: \"20px\"}}> Şifreinizi değiştirmek istiyorsanız alttaki alanları doldurunuz</h5>\r\n                    \r\n                    <CFormGroup row>\r\n                        <CCol md=\"3\">\r\n                            <CLabel >Yeni şifreniz</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                            <CInput type = \"password\" placeholder = \"Yeni şifrenizi giriniz\" onChange = {(e) => setUserPassword(e.target.value)} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"3\">\r\n                            <CLabel >Yeni şifreniz</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                            <CInput type = \"password\" placeholder = \"Yeni şifrenizi bir kez daha giriniz \" onChange = {(e) => setUserConfirmPassword(e.target.value)}/>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n\r\n                </CForm>\r\n                </CCardBody>\r\n                <CCardFooter>\r\n                <CButton type=\"submit\" size=\"sm\" color=\"primary\" disabled = {submitButtonDisabled} onClick = {onSubmit} ><CIcon name=\"cil-scrubber\"/> Kaydet</CButton>\r\n                </CCardFooter>\r\n            </CCard>\r\n            </HocLoader>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default Hesap"],"sourceRoot":""}
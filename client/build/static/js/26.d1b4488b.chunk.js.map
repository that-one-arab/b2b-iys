{"version":3,"sources":["components/index.js","views/sdckullanicilar/SdcIslemler.js"],"names":["mapDataToTurkish","fetchData","map","obj","submitDate","Date","submit_time","statusChangeDate","status_change_date","lastChangeDate","last_change_date","submitProcessNum","status","ID","id","İsim","client_name","Tarih","toISOString","slice","Hizmet","service_name","Kampanya","offer_name","Açıklama","description","Statü","salesRepDetails","sales_rep_details","finalSalesRepDetails","final_sales_rep_details","imageURLS","image_urls","getBadge","mapRoleToTurkish","service","month","year","a","fetch","headers","document","cookie","res","json","resData","SdcIslemler","match","location","history","useHistory","urlParams","qs","parse","search","useState","data","setData","useEffect","fetchAllData","items","fields","key","_style","width","label","sorter","filter","columnFilter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","item","color","index","className","variant","shape","size","onClick","push"],"mappings":"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","file":"static/js/26.d1b4488b.chunk.js","sourcesContent":["export const mapDataToTurkish = (fetchData) => {\r\n    return fetchData.map(obj => {\r\n        let submitDate = new Date(obj.submit_time)\r\n        let statusChangeDate = new Date(obj.status_change_date)\r\n        let lastChangeDate = new Date(obj.last_change_date)\r\n        let submitProcessNum = 0\r\n        let status = \"\"\r\n        if (obj.status === \"approved\") {\r\n          submitProcessNum = 3\r\n          status = \"Onaylandı\"\r\n        }\r\n        else if (obj.status === \"rejected\") {\r\n          submitProcessNum = 3\r\n          status = \"İptal\"\r\n        }\r\n        else if (obj.status === \"processing\") {\r\n          submitProcessNum = 2\r\n          status = \"İşleniyor\"\r\n        }\r\n        else if (obj.status === \"sent\") {\r\n          status = \"Gönderildi\"\r\n          submitProcessNum = 1\r\n        }\r\n        return {\r\n            ID: obj.id,\r\n            İsim: obj.client_name,\r\n            Tarih: submitDate.toISOString().slice(0, 10),\r\n            Hizmet: obj.service_name,\r\n            Kampanya: obj.offer_name,\r\n            Açıklama: obj.description,\r\n            Statü: status,\r\n            salesRepDetails: obj.sales_rep_details ? obj.sales_rep_details : \"\",\r\n            statusChangeDate: statusChangeDate ? statusChangeDate.toISOString().slice(0, 10) : null,\r\n            finalSalesRepDetails: obj.final_sales_rep_details ? obj.final_sales_rep_details : \"\",\r\n            lastChangeDate: lastChangeDate ? lastChangeDate.toISOString().slice(0, 10) : null,\r\n            submitProcessNum,\r\n            imageURLS: obj.image_urls ? obj.image_urls : null\r\n          }\r\n      })\r\n}\r\n\r\nexport const getBadge = (status)=>{\r\n    switch (status) {\r\n       case 'Onaylandı': return 'success'\r\n       case 'İşleniyor': return 'warning'\r\n       case 'İptal': return 'danger'\r\n       case 'Gönderildi': return 'secondary'\r\n       default: return 'primary'\r\n    }\r\n  }\r\n\r\nexport const mapRoleToTurkish = (status)=>{\r\n  switch (status) {\r\n      case 'dealer': return 'Bayi'\r\n      case 'sales_assistant': return 'Satış Destek'\r\n      case 'sales_assistant_chef': return 'Satış Destek Şefi'\r\n      case 'admin': return 'Admin'\r\n      default: return ''\r\n  }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { CDataTable, CBadge, CButton } from \"@coreui/react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { mapDataToTurkish, getBadge } from \"../../components/index\";\r\nimport qs from \"qs\"\r\n\r\nconst fetchData = async(service, id, month, year) => {\r\n  // const res = await fetch(`/sdc/user/${id}/details?service=${service}`, {\r\n  const res = await fetch(`/applications/details?service=${service}&userID=${id}&month=${month}&year=${year}`, {\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n    }\r\n  })\r\n  const fetchData = await res.json()\r\n  const resData = mapDataToTurkish(fetchData)\r\n  return resData\r\n }\r\n\r\nconst SdcIslemler = ({match, location}) => {\r\n  const history = useHistory()\r\n  const urlParams = qs.parse(location.search)\r\n  const [data, setData] = useState([])\r\n\r\n useEffect(() => {\r\n   const fetchAllData = async () => {\r\n     const res = await fetchData(urlParams[\"?service\"], urlParams.id, urlParams.month, urlParams.year);\r\n     setData(res)\r\n   }\r\n   fetchAllData()\r\n   // eslint-disable-next-line\r\n }, [])\r\n\r\n const fields = [\r\n   { key: 'İsim', _style: { width: '25%'} },\r\n   { key: 'Tarih', _style: { width: '25%'} },\r\n   { key: 'Tip', _style: { width: '25%'} },\r\n   { key: 'Statü', _style: { width:'25%'}},\r\n   {\r\n     key: 'show_details',\r\n     label: '',\r\n     _style: { width: '1%' },\r\n     sorter: false,\r\n     filter: false\r\n   }\r\n ]\r\n\r\n     return (\r\n<>\r\n   <CDataTable\r\n     items={data}\r\n     fields={fields}\r\n     columnFilter\r\n     tableFilter\r\n     footer\r\n     itemsPerPageSelect\r\n     itemsPerPage={20}\r\n     hover\r\n     sorter\r\n     pagination\r\n     scopedSlots = {{\r\n       'Statü':\r\n         (item)=>(\r\n           <td>\r\n             <CBadge color={getBadge(item.Statü)}>\r\n               {item.Statü}\r\n             </CBadge>\r\n           </td>\r\n         ),\r\n       'show_details':\r\n         (item, index)=>{\r\n           return (\r\n             <td className=\"py-2\">\r\n               <CButton\r\n                 color=\"primary\"\r\n                 variant=\"outline\"\r\n                 shape=\"square\"\r\n                 size=\"sm\"\r\n                 onClick={() => history.push(`/islem/${item.ID}`)}\r\n               >\r\n                 Detailar\r\n               </CButton>\r\n             </td>\r\n             )\r\n         }\r\n     }}\r\n   />\r\n</>\r\n )\r\n}\r\n\r\nexport default SdcIslemler;"],"sourceRoot":""}
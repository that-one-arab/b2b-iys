{"version":3,"sources":["views/hocloader/HocLoader.js","components/modals/Modal.js","views/sdckullanicilar/index.js","components/toggleswitch/ToggleSwitch.js","views/sdckullanicilar/SdcKullanicilar.js"],"names":["HocLoader","props","absolute","className","isLoading","role","children","relative","Modal","dispatch","show","on","onClose","type","payload","color","centered","closeButton","header","body","onClick","modalOn","setModal","style","textAlign","mapUsersData","fetchData","map","obj","ID","user_id","Kullanıcı","name","Röl","Bakiye","balance","Number","toFixed","Kayıt_tarihi","register_date","Aktif","active","compare","a","b","ToggleSwitch","id","checked","onChange","optionLabels","small","disabled","e","target","tabIndex","onKeyDown","keyCode","preventDefault","handleKeyPress","htmlFor","defaultProps","fields","key","_style","width","label","sorter","filter","selectRoleOptions","value","SdcKullanicilar","history","useHistory","queryPage","useLocation","search","match","currentPage","useState","page","setPage","usersData","setUsersData","loading","setLoading","setModalOn","fetch","method","headers","document","cookie","slice","res","status","json","mappedData","sortedData","sort","changeUserRole","newRole","userID","updateUserActiveState","useEffect","xl","columnFilter","responsive","items","hover","itemsPerPage","activePage","clickableRows","scopedSlots","item","index","setState","itemID","state","stateCopy","i","findIndex","toggleUserActive","variant","shape","size","push","options","placeholder","onActivePageChange","newPage","pages","doubleArrows","align"],"mappings":"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","file":"static/js/3.c8616986.chunk.js","sourcesContent":["import \"./loader.css\"\r\n\r\nconst HocLoader = (props) => {\r\n    if (props.absolute)\r\n      return (\r\n        <div >\r\n          <div className={ props.isLoading ? \"loader loader-absolute\" : \"\"}>\r\n            <div className={ props.isLoading ? \"spinner-border\" : \"\"} role=\"status\">\r\n              {/* <span className=\"sr-only loader-icon\">Loading...</span> */}\r\n            </div>\r\n          </div>\r\n          {\r\n            props.children\r\n          }\r\n        </div>\r\n      )\r\n    else if (props.relative)\r\n      return (\r\n        <div className = \"relativePosition\">\r\n          <div className={ props.isLoading ? \"loader loader-relative\" : \"\"}>\r\n            <div className={ props.isLoading ? \"spinner-border\" : \"\"} role=\"status\">\r\n              {/* <span className=\"sr-only loader-icon\">Loading...</span> */}\r\n            </div>\r\n          </div>\r\n          {\r\n            props.children\r\n          }\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default HocLoader;","import React from \"react\";\r\nimport { CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody, CButton } from \"@coreui/react\"\r\n\r\nfunction Modal(props) {\r\n    if (props.dispatch)\r\n        return (\r\n            <CModal \r\n            show={props.on} \r\n            onClose={() => props.dispatch({type : \"MODAL_DISPLAY\", payload: {type: \"CLOSE\"}})}\r\n            color={props.color}\r\n            centered\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle> {props.header} </CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <h5>{props.body}</h5>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => props.dispatch({type : \"MODAL_DISPLAY\", payload: {type: \"CLOSE\"}})}>Kapat</CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        )\r\n    else\r\n        return (\r\n            <CModal \r\n            show={props.modalOn}\r\n            onClose={() => props.setModal(!props.modalOn)}\r\n            color={props.color}\r\n            centered\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle> {props.header} </CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <h5 style = {{textAlign: \"center\"}}>{props.body}</h5>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => props.setModal(!props.modalOn)}>Kapat</CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        )\r\n}\r\n\r\nexport default Modal","\r\n\r\n\r\n// ******** Was used to map diğer işlem's data, for now it's deprecated ******** //\r\n// export const filterAndMapAppData = (allData) => {\r\n//     let digerIslemApproved = 0\r\n//     let digerIslemSent = 0\r\n//     let digerIslemProcessing = 0\r\n//     let digerIslemRejected = 0\r\n//     // eslint-disable-next-line\r\n//     const allDataFiltered = allData.filter(obj => {\r\n//       switch (obj.service) {\r\n//         case \"İptal\":\r\n//           digerIslemApproved = digerIslemApproved + Number(obj.approvedCount)\r\n//           digerIslemSent = digerIslemSent + Number(obj.sentCount)\r\n//           digerIslemProcessing = digerIslemProcessing + Number(obj.processingCount)\r\n//           digerIslemRejected = digerIslemRejected + Number(obj.rejectedCount)\r\n//           break;\r\n//         case \"Devir\":\r\n//           digerIslemApproved = digerIslemApproved + Number(obj.approvedCount)\r\n//           digerIslemSent = digerIslemSent + Number(obj.sentCount)\r\n//           digerIslemProcessing = digerIslemProcessing + Number(obj.processingCount)\r\n//           digerIslemRejected = digerIslemRejected + Number(obj.rejectedCount)\r\n//           break;\r\n//         case \"Nakil\":\r\n//           digerIslemApproved = digerIslemApproved + Number(obj.approvedCount)\r\n//           digerIslemSent = digerIslemSent + Number(obj.sentCount)\r\n//           digerIslemProcessing = digerIslemProcessing + Number(obj.processingCount)\r\n//           digerIslemRejected = digerIslemRejected + Number(obj.rejectedCount)\r\n//           break;\r\n//         default:\r\n//           return obj\r\n//       }\r\n//     })\r\n//     allDataFiltered.push({\r\n//       service: \"Diğer\", \r\n//       routeName: \"diger\", \r\n//       approvedCount: digerIslemApproved, \r\n//       sentCount: digerIslemSent,\r\n//       processingCount: digerIslemProcessing,\r\n//       rejectedCount: digerIslemRejected\r\n//     })\r\n//     const allDataMapped = allDataFiltered.map(obj => {\r\n//       switch (obj.service) {\r\n//         case \"Faturasız\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"faturasiz\"\r\n//           }\r\n//         case \"Faturalı\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"faturali\"\r\n//           }\r\n//         case \"DSL\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"DSL\"\r\n//           }\r\n//         case \"PSTN\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"pstn\"\r\n//           }\r\n//         case \"Taahüt\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"taahut\"\r\n//           }\r\n//         case \"Tivibu\":\r\n//           return {\r\n//             ...obj,\r\n//             routeName: \"tivibu\"\r\n//           }\r\n//         default:\r\n//           return obj\r\n//       }\r\n//     })\r\n//     return allDataMapped\r\n// }\r\n\r\nexport const mapUsersData = (fetchData) => {\r\n  return fetchData.map(obj => {\r\n    let role = \"\"\r\n    switch (obj.role) {\r\n      case \"admin\":\r\n        role = \"Admin\"\r\n        break;\r\n      case \"dealer\":\r\n        role = \"Bayi\"\r\n        break\r\n      case \"sales_assistant\":\r\n        role = \"Satış Destek\"\r\n        break\r\n      case \"sales_assistant_chef\":\r\n        role = \"Satış Destek Şefi\"\r\n        break\r\n      default:\r\n        break;\r\n    }\r\n    return {\r\n        ID: obj.user_id,\r\n        Kullanıcı: obj.name,\r\n        Röl: role,\r\n        Bakiye: obj.balance ? Number(obj.balance).toFixed(2) : \"Yok\",\r\n        Kayıt_tarihi: obj.register_date,\r\n        Aktif: obj.active\r\n      }\r\n  })\r\n}\r\n\r\nexport const compare = ( a, b ) => {\r\n  if ( a.ID < b.ID ){\r\n    return -1;\r\n  }\r\n  if ( a.ID > b.ID ){\r\n    return 1;\r\n  }\r\n  return 0;\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ToggleSwitch.scss\";\r\n\r\nconst ToggleSwitch = ({\r\n  id,\r\n  name,\r\n  checked,\r\n  onChange,\r\n  optionLabels,\r\n  small,\r\n  disabled\r\n}) => {\r\n  function handleKeyPress(e) {\r\n    if (e.keyCode !== 32) return;\r\n\r\n    e.preventDefault();\r\n    onChange(!checked);\r\n  }\r\n\r\n  return (\r\n    <div className={\"toggle-switch\" + (small ? \" small-switch\" : \"\")}>\r\n      <input\r\n        type=\"checkbox\"\r\n        name={name}\r\n        className=\"toggle-switch-checkbox\"\r\n        id={id}\r\n        checked={checked}\r\n        onChange={(e) => onChange(e.target.checked)}\r\n        disabled={disabled}\r\n      />\r\n      {id ? (\r\n        <label\r\n          className=\"toggle-switch-label\"\r\n          tabIndex={disabled ? -1 : 1}\r\n          onKeyDown={(e) => handleKeyPress(e)}\r\n          htmlFor={id}\r\n        >\r\n          <span\r\n            className={\r\n              disabled\r\n                ? \"toggle-switch-inner toggle-switch-disabled\"\r\n                : \"toggle-switch-inner\"\r\n            }\r\n            data-yes={optionLabels[0]}\r\n            data-no={optionLabels[1]}\r\n            tabIndex={-1}\r\n          />\r\n          <span\r\n            className={\r\n              disabled\r\n                ? \"toggle-switch-switch toggle-switch-disabled\"\r\n                : \"toggle-switch-switch\"\r\n            }\r\n            tabIndex={-1}\r\n          />\r\n        </label>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Set optionLabels for rendering.\r\nToggleSwitch.defaultProps = {\r\n  optionLabels: [\"Evet\", \"Hayır\"]\r\n};\r\n\r\nToggleSwitch.propTypes = {\r\n  id: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string,\r\n  optionLabels: PropTypes.array,\r\n  small: PropTypes.bool,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nexport default ToggleSwitch;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination,\r\n  CButton\r\n} from '@coreui/react'\r\nimport Select from \"react-select\"\r\nimport \"./style.css\"\r\nimport ToggleSwitch from '../../components/toggleswitch/ToggleSwitch'\r\nimport HocLoader from '../hocloader/HocLoader'\r\nimport Modal from \"../../components/modals/Modal\"\r\nimport { compare, mapUsersData } from '.'\r\n\r\nconst fields = [\r\n  { key: 'ID', _style: { width: '20%'} },\r\n  { key: 'Kullanıcı', _style: { width: '20%'} },\r\n  { key: 'Röl', _style: { width: '20%'} },\r\n  { key: \"Bakiye\", _style: {width: '15%'}},\r\n  { key: \"Kayıt_tarihi\", _style: {width: '15%'}},\r\n  { key: 'Aktif', _style: { width:'10%'}},\r\n  {\r\n    key: 'show_details',\r\n    label: '',\r\n    _style: { width: '1%' },\r\n    sorter: false,\r\n    filter: false\r\n  }\r\n]\r\n\r\nconst selectRoleOptions = [\r\n  { value: 'sales_assistant', label: 'Satış Destek' },\r\n  { value: 'dealer', label: 'Bayi' }\r\n]\r\n\r\nconst SdcKullanicilar = () => {\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/sayfa=([0-9]+)/, '')\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n  const [page, setPage] = useState(currentPage)\r\n  const [usersData, setUsersData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [modalOn, setModalOn] = useState(false)\r\n\r\n  const pageChange = newPage => {\r\n    currentPage !== newPage && history.push(`/sdc/kullanicilar?sayfa=${newPage}`)\r\n  }\r\n\r\n  const toggleUserActive = (setState, itemID, state) => {\r\n    const stateCopy = [...state]\r\n    const i = stateCopy.findIndex(obj => obj.ID === itemID)\r\n    stateCopy[i].Aktif = !stateCopy[i].Aktif\r\n    setState(stateCopy)\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true)\r\n    const res = await fetch(\"/users\", {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n      }\r\n    })\r\n    if (res.status === 200) {\r\n      const fetchData = await res.json()\r\n      const mappedData = mapUsersData(fetchData)\r\n      // *** I had to sort the data here because I couldn't figure out how to default sort it in the coreUI table component below\r\n      const sortedData = mappedData.sort(compare);\r\n      setUsersData(sortedData)\r\n      setLoading(false)\r\n    }\r\n  };\r\n\r\n  const changeUserRole = async (newRole, userID) => {\r\n    setLoading(true)\r\n    const res = await fetch(`/user/assign/role?userID=${userID}&toRole=${newRole}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n      }\r\n    })\r\n    if (res.status === 200) {\r\n      fetchData()\r\n    } else {\r\n      setModalOn(true)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const updateUserActiveState = async (userID) => {\r\n    setLoading(true)\r\n    const res = await fetch(`/user/active/${userID}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n      }\r\n    })\r\n    setLoading(false)\r\n    if (res.status === 200) {\r\n      fetchData()\r\n    } else {\r\n      // setModalOn(true)\r\n      fetchData()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    currentPage !== page && setPage(currentPage)\r\n\r\n    fetchData();\r\n  }, [currentPage, page])\r\n\r\n  return (\r\n    <HocLoader isLoading = {false} absolute = {true}>\r\n      <Modal modalOn = {modalOn} setModal = {setModalOn} color = \"danger\" header = \"Hata\" body = \"Sunucu hatasından dolayı güncelleme sağlanmamıştır, lütfen tekrar deneyin\" />\r\n      <CRow className = \"d-flex justify-content-center\">\r\n        <CCol xl={12}>\r\n          <CCard>\r\n            <CCardHeader>\r\n              Kullanıcılar\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                  columnFilter\r\n                  fields = {fields}\r\n                  loading = {loading}\r\n                  responsive\r\n                  items={usersData}\r\n                  hover\r\n                  itemsPerPage={30}\r\n                  activePage={page}\r\n                  clickableRows\r\n                  scopedSlots = {{\r\n                    \"Aktif\":\r\n                      (item, index) => {\r\n                        if (item.Röl === \"Satış Destek Şefi\" || item.Röl === \"Admin\")\r\n                          return (\r\n                          <td>\r\n                            <ToggleSwitch\r\n                              id={`userActive${item.ID}`}\r\n                              checked={item.Aktif}\r\n                              disabled\r\n                            />\r\n                          </td>\r\n                          )\r\n                        else return (\r\n                          <td>\r\n                            <ToggleSwitch\r\n                              id={`userActive${item.ID}`}\r\n                              checked={item.Aktif}\r\n                              onChange={() => {\r\n                                toggleUserActive(setUsersData, item.ID, usersData)\r\n                                updateUserActiveState(item.ID)\r\n                                }}\r\n                            />\r\n                          </td>\r\n                        )\r\n                      },\r\n                    \"Bakiye\":\r\n                      (item, index) => (\r\n                        <td>\r\n                          <p style = {{color: \"green\"}}>{item.Bakiye} {item.Bakiye === \"Yok\" ? \"\" : \"TL\"}</p>\r\n                        </td>\r\n                      ),\r\n                    'show_details':\r\n                      (item, index)=>{\r\n                        return (\r\n                          <td className=\"py-2\">\r\n                            <CButton\r\n                              color=\"primary\"\r\n                              variant=\"outline\"\r\n                              shape=\"square\"\r\n                              size=\"sm\"\r\n                              onClick={() => history.push(`/sdc/kullanici/${item.ID}`)}\r\n                            >\r\n                              Detailar\r\n                            </CButton>\r\n                          </td>\r\n                          )\r\n                      },\r\n                    'Röl':\r\n                    (item, index)=>{\r\n                      return (\r\n                        <td>\r\n                          <Select options = {selectRoleOptions} placeholder = {item.Röl} onChange = {e => changeUserRole(e.value, item.ID)} />\r\n                        </td>\r\n                        )\r\n                    }\r\n                  }}\r\n              />\r\n              <CPagination\r\n                  activePage={page}\r\n                  onActivePageChange={pageChange}\r\n                  pages={15}\r\n                  doubleArrows={false} \r\n                  align=\"center\"\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </HocLoader>\r\n  )\r\n}\r\n\r\nexport default SdcKullanicilar;\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/hocloader/HocLoader.js","components/modals/Modal.js","pages/login/Login.js"],"names":["HocLoader","props","absolute","className","isLoading","role","children","relative","Modal","dispatch","show","on","onClose","type","payload","color","centered","closeButton","header","body","onClick","modalOn","setModal","style","textAlign","Login","onEmailChange","e","setState","email","target","value","onPasswordChange","password","state","onSubmit","a","loading","logoutUser","test","String","toLowerCase","modalHeader","modalBody","modalColor","fetch","method","headers","JSON","stringify","res","status","json","data","document","cookie","token","userLoggingin","fillUserInfo","componentWillUnmount","this","md","placeholder","autoComplete","onChange","name","xs","to","width","active","tabIndex","React","Component","connect","loginErr","reducer","userLoggininErr"],"mappings":"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","file":"static/js/17.b8dd4525.chunk.js","sourcesContent":["import \"./loader.css\"\r\n\r\nconst HocLoader = (props) => {\r\n    if (props.absolute)\r\n      return (\r\n        <div >\r\n          <div className={ props.isLoading ? \"loader loader-absolute\" : \"\"}>\r\n            <div className={ props.isLoading ? \"spinner-border\" : \"\"} role=\"status\">\r\n              {/* <span className=\"sr-only loader-icon\">Loading...</span> */}\r\n            </div>\r\n          </div>\r\n          {\r\n            props.children\r\n          }\r\n        </div>\r\n      )\r\n    else if (props.relative)\r\n      return (\r\n        <div className = \"relativePosition\">\r\n          <div className={ props.isLoading ? \"loader loader-relative\" : \"\"}>\r\n            <div className={ props.isLoading ? \"spinner-border\" : \"\"} role=\"status\">\r\n              {/* <span className=\"sr-only loader-icon\">Loading...</span> */}\r\n            </div>\r\n          </div>\r\n          {\r\n            props.children\r\n          }\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default HocLoader;","import React from \"react\";\r\nimport { CModal, CModalHeader, CModalTitle, CModalFooter, CModalBody, CButton } from \"@coreui/react\"\r\n\r\nfunction Modal(props) {\r\n    if (props.dispatch)\r\n        return (\r\n            <CModal \r\n            show={props.on} \r\n            onClose={() => props.dispatch({type : \"MODAL_DISPLAY\", payload: {type: \"CLOSE\"}})}\r\n            color={props.color}\r\n            centered\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle> {props.header} </CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <h5>{props.body}</h5>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => props.dispatch({type : \"MODAL_DISPLAY\", payload: {type: \"CLOSE\"}})}>Kapat</CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        )\r\n    else\r\n        return (\r\n            <CModal \r\n            show={props.modalOn}\r\n            onClose={() => props.setModal(!props.modalOn)}\r\n            color={props.color}\r\n            centered\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle> {props.header} </CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <h5 style = {{textAlign: \"center\"}}>{props.body}</h5>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => props.setModal(!props.modalOn)}>Kapat</CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport \"./login.css\"\r\nimport Modal from '../../components/modals/Modal';\r\nimport HocLoader from '../../views/hocloader/HocLoader';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      modalColor: \"\", \r\n      modalOn: false, \r\n      modalBody: \"\", \r\n      modalHeader: \"\", \r\n      loading: false\r\n    }\r\n  };\r\n\r\n  onEmailChange = (e) => {\r\n    this.setState({email: e.target.value});\r\n  };\r\n\r\n  onPasswordChange = (e) => {\r\n    this.setState({password: e.target.value});\r\n  };\r\n\r\n  setModal = (e) => {\r\n    this.setState({ modalOn: !this.state.modalOn })\r\n  }\r\n\r\n  onSubmit = async () => {\r\n    this.setState({loading: true})\r\n    this.props.logoutUser()\r\n    //verify email\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const isEmailValid = re.test(String(this.state.email).toLowerCase());\r\n    if (!isEmailValid)\r\n      return this.setState({\r\n        modalOn: true,\r\n        modalHeader: \"Hatalı email\",\r\n        modalBody: \"Lütfen geçerli bir email adresi giriniz\",\r\n        modalColor: \"warning\"\r\n      })\r\n    // verify email end\r\n    let res = await fetch(\"/login\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'authorization' :'Bearer '\r\n      },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n    })\r\n    this.setState({loading: false})\r\n    if (res.status === 200) {\r\n      let data = await res.json()\r\n      document.cookie = `vitoken=${data.token}`\r\n      this.props.userLoggingin()\r\n      this.props.fillUserInfo(data)\r\n\r\n    } else if (res.status === 403) {\r\n      this.setState({\r\n        modalOn: true,\r\n        modalHeader: \"Hatalı giriş\",\r\n        modalBody: \"Lütfen bilgilerinizi kontrol ederek tekrar deneyin\",\r\n        modalColor: \"warning\"\r\n      })\r\n    } else if (res.status === 406) {\r\n      this.setState({\r\n        modalOn: true,\r\n        modalHeader: \"Giriş yapılmaz\",\r\n        modalBody: \"Hesabınız deaktiv edilmiştir, lütfen yöneticilere başvuru yapınız\",\r\n        modalColor: \"danger\"\r\n      })\r\n    } else {\r\n      this.setState({\r\n        modalOn: true,\r\n        modalHeader: \"SUNUCU HATASI\",\r\n        modalBody: \"Sunucu tarafından bir hata olmuştur, lütfen tekrar deneyin\",\r\n        modalColor: \"danger\"\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.setState(this.state)\r\n  }\r\n\r\n  render() {\r\n    const { loading, modalColor, modalOn, modalBody, modalHeader } = this.state\r\n    return (\r\n      <HocLoader absolute = {true} isLoading = {loading}>\r\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n        <CContainer>\r\n          <Modal modalOn = {modalOn} color = {modalColor} header = {modalHeader} body = {modalBody} setModal = {this.setModal} />\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol md=\"8\">\r\n              <CCardGroup>\r\n                <CCard className=\"p-4\">\r\n                  <CCardBody>\r\n                    <CForm>\r\n                      <h1>Kullanıcı girişi</h1>\r\n                      <p className=\"text-muted\">Hesabınıza giriş yapın</p>\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <i className=\"far fa-envelope\"></i>\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" placeholder=\"E-Mailiniz\" autoComplete=\"email\" onChange = {this.onEmailChange} />\r\n                      </CInputGroup>\r\n                      <CInputGroup className=\"mb-4\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-lock-locked\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"password\" placeholder=\"Şifre\" autoComplete=\"current-password\" onChange = {this.onPasswordChange} />\r\n                      </CInputGroup>\r\n                      <CRow>\r\n                        <CCol xs=\"6\">\r\n                          <CButton color=\"primary\" className=\"px-4\" onClick = {this.onSubmit}>Giriş</CButton>\r\n                        </CCol>\r\n                        <CCol xs=\"6\" className=\"text-right\">\r\n                          <CButton color=\"link\" className=\"px-0\"> <Link to = \"resetpassword/verify\">Şifrenizi unuttunuz mu?</Link></CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CForm>\r\n                  </CCardBody>\r\n                </CCard>\r\n                <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\r\n                  <CCardBody className=\"text-center\">\r\n                    <div>\r\n                      <h2>HESAP OLUŞTURUN</h2>\r\n                      <p>Sayfamıza ilk defa giriş yapıyorsanız buradan hesabınızı oluşturabilirsiniz</p>\r\n                      <Link to=\"/register\">\r\n                        <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Şimdi Oluşturun!</CButton>\r\n                      </Link>\r\n                    </div>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCardGroup>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </div>\r\n      </HocLoader>\r\n    )  \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loginErr: state.reducer.loginErr\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    userLoggingin : () => {\r\n          dispatch({type: \"LOGIN\", payload: \"hello\"})\r\n      },\r\n    userLoggininErr: () => {\r\n          dispatch({type: \"LOGIN-ERROR\"})\r\n    },\r\n    logoutUser : () => {\r\n      dispatch({type: \"LOGOUT\"})\r\n    },\r\n    fillUserInfo: (data) => {\r\n      dispatch({type: \"FILL_USER_INFO\", payload: data})\r\n    }\r\n  }\r\n}   \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/index.js","components/appdataform/index.js","components/appdataform/AppDataForm.js","views/sdckullanicilar/SdcIslem.js"],"names":["mapDataToTurkish","fetchData","map","obj","submitDate","Date","submit_time","statusChangeDate","status_change_date","lastChangeDate","last_change_date","submitProcessNum","status","ID","id","İsim","client_name","Tarih","toISOString","slice","Hizmet","service_name","Kampanya","offer_name","Açıklama","description","Statü","salesRepDetails","sales_rep_details","finalSalesRepDetails","final_sales_rep_details","imageURLS","image_urls","getBadge","mapRoleToTurkish","renderMiddleTextArea","applicationDetails","userRole","row","rows","placeholder","readOnly","renderFooterTextArea","setSdDetay","userDetails","forRoleSetFields","field3","onChange","e","target","value","setHeaderColor","details","AppDataForm","isEditable","useSelector","state","reducer","loggedInUserInfo","loggedInRole","role","forRoleSetFormLabel","className","xs","sm","style","backgroundColor","elm","i","md","href","rel","alt","maxWidth","maxHeight","cursor","src","SdcIslem","applicationID","match","params","useState","data","setData","useEffect","a","fetch","method","headers","document","cookie","res","json","mappedData","console","log"],"mappings":"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","file":"static/js/23.91983e3a.chunk.js","sourcesContent":["export const mapDataToTurkish = (fetchData) => {\r\n    return fetchData.map(obj => {\r\n        let submitDate = new Date(obj.submit_time)\r\n        let statusChangeDate = new Date(obj.status_change_date)\r\n        let lastChangeDate = new Date(obj.last_change_date)\r\n        let submitProcessNum = 0\r\n        let status = \"\"\r\n        if (obj.status === \"approved\") {\r\n          submitProcessNum = 3\r\n          status = \"Onaylandı\"\r\n        }\r\n        else if (obj.status === \"rejected\") {\r\n          submitProcessNum = 3\r\n          status = \"İptal\"\r\n        }\r\n        else if (obj.status === \"processing\") {\r\n          submitProcessNum = 2\r\n          status = \"İşleniyor\"\r\n        }\r\n        else if (obj.status === \"sent\") {\r\n          status = \"Gönderildi\"\r\n          submitProcessNum = 1\r\n        }\r\n        return {\r\n            ID: obj.id,\r\n            İsim: obj.client_name,\r\n            Tarih: submitDate.toISOString().slice(0, 10),\r\n            Hizmet: obj.service_name,\r\n            Kampanya: obj.offer_name,\r\n            Açıklama: obj.description,\r\n            Statü: status,\r\n            salesRepDetails: obj.sales_rep_details ? obj.sales_rep_details : \"\",\r\n            statusChangeDate: statusChangeDate ? statusChangeDate.toISOString().slice(0, 10) : null,\r\n            finalSalesRepDetails: obj.final_sales_rep_details ? obj.final_sales_rep_details : \"\",\r\n            lastChangeDate: lastChangeDate ? lastChangeDate.toISOString().slice(0, 10) : null,\r\n            submitProcessNum,\r\n            imageURLS: obj.image_urls ? obj.image_urls : null\r\n          }\r\n      })\r\n}\r\n\r\nexport const getBadge = (status)=>{\r\n    switch (status) {\r\n       case 'Onaylandı': return 'success'\r\n       case 'İşleniyor': return 'warning'\r\n       case 'İptal': return 'danger'\r\n       case 'Gönderildi': return 'secondary'\r\n       default: return 'primary'\r\n    }\r\n  }\r\n\r\nexport const mapRoleToTurkish = (status)=>{\r\n  switch (status) {\r\n      case 'dealer': return 'Bayi'\r\n      case 'sales_assistant': return 'Satış Destek'\r\n      case 'sales_assistant_chef': return 'Satış Destek Şefi'\r\n      case 'admin': return 'Admin'\r\n      default: return ''\r\n  }\r\n}","import { CCol, CFormGroup, CLabel, CTextarea, CButton } from '@coreui/react'\r\n\r\nexport const forRoleSetFormLabel = (role) => {\r\n    switch (role) {\r\n        case \"dealer\":\r\n            return {\r\n                field3: \"Satış Destek Son Notları\"\r\n            }\r\n        case \"sales_assistant\":\r\n            return {\r\n                field3: \"Son notlarınız\"\r\n            }\r\n        case \"sales_assistant_chef\":\r\n            return {\r\n                field3: \"Satış Destek Son Notları\"\r\n            }    \r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport const renderBasvuruDetayFooterButtons = (details, updateApp) => {\r\n    // if the application is on Hold (first status change)\r\n    if (details.submitProcessNum === 2) {\r\n        return (\r\n        <div id = \"basvuruDetay-footerButtons\">\r\n            {/* Here \"true\" in updateApp refers to sp optional parameter, if true it modifies the urlString in fetch */}\r\n            <CButton onClick = {() => updateApp(\"İptal\", true)} size=\"md\" color=\"danger\"><i className=\"fas fa-ban\"></i> İPTAL</CButton>\r\n            <CButton onClick = {()=> updateApp(\"Onaylandı\", true)} size=\"md\" color=\"success\" className = \"\">\r\n            <i className=\"fas fa-check-circle\"></i> ONAYLA</CButton>\r\n        </div>\r\n        )\r\n    }\r\n    // if the applications has been approved or denied (second status change)\r\n    else if (details.submitProcessNum === 3) {\r\n        return null\r\n    // else return first process submission\r\n    } else {\r\n        return (\r\n        <div id = \"basvuruDetay-footerButtons\">\r\n            <CButton onClick = {() => updateApp(\"İptal\")} size=\"md\" color=\"danger\"><i className=\"fas fa-ban\"></i> İPTAL</CButton>\r\n            <CButton onClick = {()=> updateApp(\"İşleniyor\")} size=\"md\" color=\"warning\" className = \"basvuru-detay-submit-buttons-submit\" >\r\n            <i className=\"fas fa-arrow-circle-up\"></i> İŞLE</CButton>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const renderMiddleTextArea = (applicationDetails, userRole) => {\r\n    if (applicationDetails.submitProcessNum === 2) {\r\n        return (\r\n            <CFormGroup row>\r\n            <CCol>\r\n                <CLabel>Bayi Açıklaması</CLabel>\r\n                <CTextarea \r\n                rows=\"8\"\r\n                placeholder={applicationDetails.Açıklama}\r\n                readOnly\r\n                />\r\n            </CCol>\r\n            {\r\n                userRole === \"sales_assistant\" ?\r\n                <CCol>\r\n                    <CLabel>Önceki Notlarınız</CLabel>\r\n                    <CTextarea\r\n                    rows=\"8\"\r\n                    placeholder={applicationDetails.salesRepDetails}\r\n                    readOnly\r\n                    />\r\n                </CCol>\r\n                :\r\n                <CCol>\r\n                    <CLabel>Satış Destek Notları</CLabel>\r\n                    <CTextarea\r\n                    rows=\"8\"\r\n                    placeholder={applicationDetails.salesRepDetails}\r\n                    readOnly\r\n                    />\r\n                </CCol>\r\n            }\r\n            </CFormGroup>\r\n        )\r\n    }\r\n    else if (applicationDetails.submitProcessNum === 3) {\r\n        return (\r\n        <CFormGroup>\r\n        <CLabel>Bayi Açıklaması</CLabel>\r\n        <CTextarea \r\n            rows=\"4\"\r\n            placeholder={applicationDetails.Açıklama}\r\n            readOnly\r\n        />\r\n        </CFormGroup>\r\n        )\r\n    } else {\r\n        return (\r\n        <CFormGroup>\r\n            <CLabel>Bayi Açıklaması</CLabel>\r\n            <CTextarea \r\n            rows=\"4\"\r\n            placeholder={applicationDetails.Açıklama}\r\n            readOnly\r\n            />\r\n        </CFormGroup>\r\n        )\r\n    }\r\n}\r\n\r\nexport const renderFooterTextArea = (setSdDetay, userRole, userDetails, forRoleSetFields) => {\r\n    if (userDetails.submitProcessNum === 3)\r\n        return (\r\n            <CFormGroup>\r\n                <CLabel>{forRoleSetFields.field3}</CLabel>\r\n                    <CTextarea \r\n                    rows=\"6\"\r\n                    placeholder={userDetails.finalSalesRepDetails}\r\n                    readOnly\r\n                    />\r\n            </CFormGroup>\r\n        )\r\n    else {\r\n        if (userRole === \"sales_assistant\")\r\n            return (\r\n                <CFormGroup>\r\n                    <CLabel>Notlarınız</CLabel>\r\n                    <CTextarea \r\n                        rows=\"6\"\r\n                        placeholder=\"işlemle alakalı notlarınız...\"\r\n                        onChange = {(e) => setSdDetay(e.target.value)}\r\n                    />\r\n                </CFormGroup>\r\n            )\r\n        else\r\n            return (\r\n                <CFormGroup>\r\n                    <CLabel>Satış Destek Son Notları</CLabel>\r\n                    <CTextarea \r\n                        rows=\"6\"\r\n                        placeholder={userDetails.finalSalesRepDetails}\r\n                        readOnly\r\n                    />\r\n                </CFormGroup>\r\n            )\r\n    }\r\n}\r\n\r\nexport const setHeaderColor = (details) => {\r\n    switch (details.Statü) {\r\n        case \"İşleniyor\":\r\n        return \"rgb(214, 160, 11)\"\r\n        case \"İptal\":\r\n        return \"rgb(212, 69, 13)\"\r\n        case \"Onaylandı\":\r\n        return \"rgb(55, 150, 55)\"\r\n        default:\r\n        return \"rgb(120, 138, 151)\"\r\n    }\r\n}","import { CCard, CCardBody, CCardHeader, CCol, CRow, CFormGroup, CLabel, CInput } from '@coreui/react'\r\nimport { setHeaderColor, renderMiddleTextArea, forRoleSetFormLabel, renderFooterTextArea } from '.'\r\nimport { useSelector } from \"react-redux\"\r\nimport \"./AppDataForm.css\"\r\n// import { useHistory } from 'react-router'\r\nimport React from 'react'\r\n\r\nconst AppDataForm = ({isEditable, userDetails, setSdDetay}) => {\r\n    const userRole = useSelector(state => state.reducer.loggedInUserInfo.loggedInRole)\r\n    const forRoleSetFields = forRoleSetFormLabel(userRole)\r\n    // const [clientAppImageURLS, setClientAppImageURLS] = React.useState([])\r\n    // const history = useHistory()\r\n    // React.useEffect(() => {\r\n    //   if (userDetails.imageURLS)\r\n    //     setClientAppImageURLS(userDetails.imageURLS)\r\n    // }, [])\r\n    return(\r\n    <CRow className = \"justify-content-center align-items-center\">\r\n        <CCol xs=\"12\" sm=\"12\">\r\n          <CCard>\r\n            <CCardHeader className = \"basvuru-detay-header\" style = {{backgroundColor: setHeaderColor(userDetails)}}>\r\n              <h4>Başvuru Detay</h4>\r\n              {/* <CCol sm = \"2\" className = \"basvuru-detay-header-buttonCol\">\r\n                <CButton active block color=\"secondary\" aria-pressed=\"true\" onClick = {() => history.goBack()}>\r\n                    Geri\r\n                 </CButton>\r\n              </CCol> */}\r\n            </CCardHeader>\r\n            <CCardBody className = \"basvuru-detay\" >\r\n              <CFormGroup row className=\"my-0\">\r\n                <CCol xs=\"2\">\r\n                  <CFormGroup>\r\n                    <CLabel>ID</CLabel>\r\n                    <CInput placeholder= {userDetails.ID} readOnly />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"10\">\r\n                  <CFormGroup>\r\n                    <CLabel>İsim</CLabel>\r\n                    <CInput placeholder={userDetails.İsim} readOnly />\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row className=\"my-0\">\r\n                <CCol xs=\"2\">\r\n                  <CFormGroup>\r\n                    <CLabel>Tarih</CLabel>\r\n                    <CInput placeholder= {userDetails.Tarih} readOnly />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"3\">\r\n                  <CFormGroup>\r\n                    <CLabel>Hizmet</CLabel>\r\n                    <CInput placeholder={userDetails.Hizmet} readOnly />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"7\">\r\n                  <CFormGroup>\r\n                    <CLabel>Kampanya</CLabel>\r\n                    <CInput placeholder={userDetails.Kampanya} readOnly />\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CFormGroup>\r\n              {renderMiddleTextArea(userDetails)}\r\n              {renderFooterTextArea(setSdDetay, userRole, userDetails, forRoleSetFields)}\r\n              <CFormGroup row>\r\n              {\r\n                userDetails.imageURLS && userDetails.imageURLS.map ((elm, i) => {\r\n                  return (\r\n                    <CCol md=\"4\" key = {i}>\r\n                      <a href = {elm} target = \"_blank\" rel = \"noreferrer\" >\r\n                        <img alt = \"\" style = {{maxWidth: \"200px\", maxHeight: \"200px\", cursor: \"pointer\"}}\r\n                        src = {elm} \r\n                        />\r\n                      </a>\r\n                    </CCol>\r\n                  )\r\n                })\r\n              }\r\n              </CFormGroup>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n    </CRow>\r\n    )\r\n}\r\n\r\nexport default AppDataForm","import React, { useEffect, useState } from 'react'\r\nimport AppDataForm from '../../components/appdataform/AppDataForm'\r\nimport { mapDataToTurkish } from \"../../components/index\";\r\n\r\nconst SdcIslem = ({match}) => {\r\n  const applicationID = match.params.id\r\n  const [data, setData] = useState({})\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await fetch(`/applications/${applicationID}`,{\r\n          method: 'GET',\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n          }\r\n      })\r\n      if (res.status === 200) {\r\n        const fetchData = await res.json()\r\n        const mappedData = mapDataToTurkish(fetchData)\r\n        console.log(mappedData)\r\n        setData(mappedData[0])\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [applicationID])\r\n\r\n    return (\r\n      <AppDataForm userDetails = {data} />\r\n    )\r\n}\r\n\r\nexport default SdcIslem"],"sourceRoot":""}